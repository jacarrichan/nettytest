<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.pamelf.test</groupId>
	<artifactId>nettytest</artifactId>
	<version>${project.parent.version}</version>
	<packaging>war</packaging>
	<properties>
		<maven.build.timestamp.format>yyyy-MM-dd_HH_mm
		</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty.version>8.0.0.M3</jetty.version>
		<version.jmock>1.2.0</version.jmock>
		<version.junit>4.10</version.junit>
		<spring.version>3.2.4.RELEASE</spring.version>
		<commons.package>compile</commons.package>
	</properties>
	<dependencies>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.4.6.Final</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>${commons.package}</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<!-- 该依赖重写了commons-logging ,所以不要再引入commons-logging -->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.6</version>
			<scope>${commons.package}</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
			<scope>${commons.package}</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>${commons.package}</scope>
		</dependency>

		<!-- 加入spring测试依赖包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
			<scope>${commons.package}</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
			<scope>${commons.package}</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
			<scope>${commons.package}</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.3</version>
			<scope>${commons.package}</scope>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.11.0.GA</version>
			<scope>${commons.package}</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>3.1.14</version>
			<!-- 已配置jndi -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>0.2.26</version>
			<!-- 已配置jndi -->
			<scope>provided</scope>
		</dependency>
		<!-- jetty -->

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
			<version>${jetty.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-plus</artifactId>
			<scope>test</scope>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1-glassfish</artifactId>
			<scope>provided</scope>
			<version>2.1.v20100127</version>
		</dependency>
		<!-- servlet -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>servlet-api</artifactId>
			<version>3.0.20100224</version>
			<scope>provided</scope>
		</dependency>
		<!-- test begin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<!-- 部署到服务器用 -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- 处理资源时使用UTF8编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 用于maven的生命周期中的test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<!-- 不执行单元测试 -->
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>provided</includeScope>
							<!-- tomcat已经带了就不copy了 -->
							<excludeArtifactIds>druid,mysql-connector-java,servlet-api,jsp-api,jsp-2.1-glassfish
							</excludeArtifactIds>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<!-- 编译的时候使用JDK6和UTF8编码 -->
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webResources>
						<resource>
							<directory>${runtime.env}</directory>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
					</webResources>
					<!-- http://maven.apache.org/plugins/maven-war-plugin/ -->
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
					<archive>
						<manifest>
							<!-- <addClasspath>true</addClasspath> -->
							<classpathMavenRepositoryLayout>true
							</classpathMavenRepositoryLayout>
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true
							</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Built-At>${maven.build.timestamp}</Built-At>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- 解决打包格式为bundle的问题 -->
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.4.0</version>
				<extensions>true</extensions>
			</plugin>
			<!-- tomcat 的插件 [mvn tomcat7:deploy]note,不要把7掉了,不然会碰见403错误的 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>tomcatserver</server>
					<!-- <url>http://192.168.1.244:8082/manager/text</url> -->
					<url>http://localhost:8080/manager/text</url>
					<!-- <url>http://localhost:8080/manager</url> -->
					<update>true</update>
					<charset>${project.build.sourceEncoding}</charset>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat6-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>tomcatserver</server>
					<url>http://localhost:8080/manager</url>
					<update>true</update>
					<charset>${project.build.sourceEncoding}</charset>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<violationSeverity>error</violationSeverity>
					<includeTestSourceDirectory>false</includeTestSourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>check-style</id>
						<phase>verify</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<!-- <resource> -->
			<!-- <directory>src/test/resources</directory> -->
			<!-- <filtering>false</filtering> -->
			<!-- <includes> -->
			<!-- <include>*.xml</include> -->
			<!-- <include>**/*.xml</include> -->
			<!-- <include>**/*.properties</include> -->
			<!-- </includes> -->
			<!-- </resource> -->
		</resources>
	</build>
	<repositories>
		<repository>
			<id>repo1</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>myfirst-cmcc</id>
			<url>http://myfirst-cmcc.googlecode.com/svn/maven-repo/releases/
			</url>
		</repository>
		<repository>
			<id>sonatype</id>
			<url>http://repository.sonatype.org/content/groups/forge/</url>
		</repository>
		<repository>
			<id>jspresso</id>
			<url>http://repository.jspresso.org/maven2/</url>
		</repository>
		<repository>
			<id>nuxeo</id>
			<url>https://maven-us.nuxeo.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>firsthuida</id>
			<url>http://www.firsthuida.com:2013/nexus/content/groups/public/
			</url>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<properties>
				<runtime.env>src/main/env/development</runtime.env>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
			<properties>
				<runtime.env>src/main/env/product</runtime.env>
			</properties>
		</profile>

		<profile>
			<id>qa</id>
			<activation>
				<property>
					<name>env</name>
					<value>qa</value>
				</property>
			</activation>
			<properties>
				<runtime.env>src/main/env/development</runtime.env>
			</properties>
			<build>
				<!-- 定版本打包用 -->
				<finalName>${project.artifactId}-${project.version}-r${buildNumber}
				</finalName>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>create</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<configuration>
								<doCheck>true</doCheck>
								<doUpdate>true</doUpdate>
							</configuration>
							<!-- <format>{1,date,yyyy-MM-dd_HH-mm-ss}</format> -->
							<format>{0}</format>
							<items>
								<!-- 获取此值时会使用native方法，所以需要系统能在cmd中执行 svn info这个命令 http://www.visualsvn.com/files/Apache-Subversion-1.7.5.zip -->
								<item>scmVersion</item>
								<item>timestamp</item>
							</items>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>